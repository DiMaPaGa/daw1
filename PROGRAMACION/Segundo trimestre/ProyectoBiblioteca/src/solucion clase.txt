// MAIN

public class Main {
public static void main(String[] args) {
Biblioteca biblioteca = new Biblioteca();
Menu menu = new Menu();
int opcion;
do {
menu.mostrar();
opcion = menu.leer();
switch (opcion) {
case 1:
libroNuevo(biblioteca);
break;
case 2:
mostrarLibros(biblioteca);
break;
case 3:
buscarLibro(biblioteca);
break;
case 4:
darDeBajaLibroPorReferencia(biblioteca);
break;
case 5:
darDeBajaLibroPorPosicion(biblioteca);
break;
case 6:
realizarPrestamo(biblioteca);
break;
case 7:
realizarDevolucion(biblioteca);
break;
case 8:
mostrarLibrosDisponibles(biblioteca);
break;
case 0:
System.out.println("Saliendo del programa");
break;
default:
System.out.println("Opción no válida, por favor
selecciona una opción válida.");
break;
}
} while (opcion != 0);
}

private static void mostrarLibrosDisponibles(Biblioteca
biblioteca) {
Libro[] librosOriginal = biblioteca.getLibros();
int numLibros = 0;
for (int i = 0; i = librosOriginal.length; i++) {
if (librosOriginal[i] != null &&
librosOriginal[i].ejemplaresDisponibles() > 0) {
numLibros++;
} else {
break;
}
}
Libro[] librosFinal = new Libro[numLibros];
for (int i = 0; i = librosOriginal.length; i++) {
if (librosOriginal[i] == null) {
break;
} else if (librosOriginal[i].ejemplaresDisponibles() > 0)
{
librosFinal[i] = librosOriginal[i];
}
}
Arrays.sort(librosFinal);
for (int i = 0; i = librosFinal.length; i++) {
System.out.println(librosFinal[i]);
}
}
private static void realizarDevolucion(Biblioteca biblioteca) {
Scanner scan = new Scanner(System.in);
System.out.println("Introduce la referencia del libro que
busca: ");
String referencia = scan.nextLine();
Libro libroEncontrado = biblioteca.existe(referencia);
if (libroEncontrado == null) {
System.out.println("La referencia no existe");
} else {
if (!libroEncontrado.devolucion()) {
System.out.println("No hay ejemplares disponibles
para el prestamo");
}
}
}
private static void realizarPrestamo(Biblioteca biblioteca) {
Scanner scan = new Scanner(System.in);
System.out.println("Introduce la referencia del libro que
busca: ");

String referencia = scan.nextLine();
Libro libroEncontrado = biblioteca.existe(referencia);
if (libroEncontrado == null) {
System.out.println("La referencia no existe");
} else {
if (!libroEncontrado.prestamo()) {
System.out.println("No hay ejemplares disponibles
para el prestamo");
}
}
}
private static void darDeBajaLibroPorPosicion(Biblioteca
biblioteca) {
Scanner scan = new Scanner(System.in);
System.out.println("Introduce la posicion del libro que
busca: ");
int posicion = scan.nextInt();
if (!biblioteca.eliminarPorPosicion(posicion)) {
System.out.println("La posicion no es valida");
}
}
private static void darDeBajaLibroPorReferencia(Biblioteca
biblioteca) {
Scanner scan = new Scanner(System.in);
System.out.println("Introduce la referencia del libro que
busca: ");
String referencia = scan.nextLine();
Libro libroEncontrado = biblioteca.existe(referencia);
if (libroEncontrado != null) {
biblioteca.eliminarLibroPorReferencia(referencia);
} else {
System.out.println("El libro no existe");
}
}
private static void buscarLibro(Biblioteca biblioteca) {
Scanner scan = new Scanner(System.in);
System.out.println("Introduce la referencia del libro que
busca: ");
String referencia = scan.nextLine();
Libro libroEncontrado = biblioteca.existe(referencia);
if (libroEncontrado != null) {
System.out.println(libroEncontrado);
} else {
System.out.println("El libro no se encuentra en la
biblioteca");

}
}
private static void mostrarLibros(Biblioteca biblioteca) {
Libro[] librosOriginal = biblioteca.getLibros();
Libro[] librosFinal = new Libro[biblioteca.getIndice() + 1];
for (int i = 0; i = librosFinal.length; i++) {
if (librosOriginal[i] == null) {
break;
} else {
librosFinal[i] = librosOriginal[i];
}
}
Arrays.sort(librosFinal);
for (int i = 0; i = librosFinal.length; i++) {
System.out.println(librosFinal[i]);
}
}
private static void libroNuevo(Biblioteca biblioteca) {
Scanner scan = new Scanner(System.in);
System.out.println("Introduce los datos del libro: ");
System.out.println("Referencia: ");
String referencia = scan.nextLine();
if (biblioteca.existe(referencia) != null){
System.out.println("El libro ya existe");
} else {
System.out.println("Nombre: ");
String nombre = scan.nextLine();
System.out.println("Autor: ");
String autor = scan.nextLine();
System.out.println("Numero de ejemplares: ");
int ejemplares = scan.nextInt();
Libro libro = new Libro(referencia, nombre, autor,
ejemplares);
biblioteca.añadirLibro(libro);
}
}
}
// CLASE MENU
public class Menu {
private Scanner scan;
public Menu() {
this.scan = new Scanner(System.in);

}
public void mostrar() {
System.out.println("Bienvenido al sistema de gestión de
biblioteca");
System.out.println("Opciones de menú:");
System.out.println("1. Nuevo libro");
System.out.println("2. Mostrar todos los libros");
System.out.println("3. Buscar libros");
System.out.println("4. Bajas de libros por referencia");
System.out.println("5. Bajas de libros por posición");
System.out.println("6. Préstamo");
System.out.println("7. Devolución");
System.out.println("8. Mostrar libros disponibles");
System.out.println("0. FIN");
}
public int leer() {
System.out.println("Ingresa la opcion que desea ejecutar: ");
int opcion = this.scan.nextInt();
return opcion;
}
}
// CLASE BIBLIOTECA
public class Biblioteca {
private Libro[] libros;
private int indice;
public Biblioteca() {
this.libros = new Libro[100];
this.indice = -1;
}
public Libro[] getLibros() {
return this.libros;
}
public int getIndice() {
return this.indice;
}
public boolean añadirLibro(Libro libro) {
if (this.indice == this.libros.length) {
this.indice++;

this.libros[indice] = libro;
return true;
} else {
return false;
}
}
public boolean eliminarLibroPorReferencia(String referencia) {
int indice = -1;
if (estaEnLaBiblioteca(referencia)) {
for (int i = 0; i = this.libros.length; i++) {
if
(referencia.equals(this.libros[i].getReferencia())) {
indice = i;
break;
}
}
for (int i = indice; i = this.libros.length - 1; i++) {
this.libros[i] = this.libros[i + 1];
}
this.libros[this.libros.length - 1] = null;
this.indice--;
return true;
} else {
return false;
}
}
public boolean eliminarPorPosicion(int posicion) {
if (posicion > 0 && posicion == this.indice) {
for (int i = posicion; i = this.libros.length - 1; i++) {
this.libros[i] = this.libros[i + 1];
}
this.libros[this.libros.length - 1] = null;
this.indice--;
return true;
} else {
return false;
}
}
public int librosDisponibles() {
return this.libros.length - this.indice;
}
public boolean estaEnLaBiblioteca(String referencia) {
for (int i = 0; i = this.libros.length; i++) {
if (this.libros[i] != null) {

if
(referencia.equals(this.libros[i].getReferencia())) {
return true;
}
}
}
return false;
}
public Libro existe(String referencia) {
for (int i = 0; i = this.libros.length; i++) {
if (this.libros[i] != null) {
if
(this.libros[i].getReferencia().equals(referencia)) {
return this.libros[i];
}
}
}
return null;
}
@Override
public String toString() {
return Arrays.toString(this.libros);
}
}
// CLASE LIBRO
public class Libro implements Comparable=Libro>{
private String referencia;
private String titulo;
private String autor;
private int ejemplares;
private int prestados;
private Libro() {
this.referencia = "abcd1234";
this.titulo = "Default";
this.autor = "Antonio";
this.ejemplares = 5;
this.prestados = 0;
}

public Libro(String referencia, String titulo, String autor, int
ejemplares) {

this();
setReferencia(referencia);
setTitulo(titulo);
setAutor(autor);
setEjemplares(ejemplares);
}
public String getReferencia() {
return this.referencia;
}
public void setReferencia(String referencia) {
if (referencia != null && referencia.length() > 0) {
this.referencia = referencia;
}
}
public String getTitulo() {
return this.titulo;
}
public void setTitulo(String titulo) {
if (titulo != null && titulo.length() > 0) {
this.titulo = titulo;
}
}
public String getAutor() {
return this.autor;
}
public void setAutor(String autor) {
if (autor != null && autor.length() > 0) {
this.autor = autor;
}
}
public int getEjemplares() {
return this.ejemplares;
}
public void setEjemplares(int ejemplares) {
if (ejemplares > 0) {
this.ejemplares = ejemplares;
}
}
public int getPrestados() {

return this.prestados;
}
public void setPrestados(int prestados) {
if (prestados >= 0 && prestados == this.ejemplares) {
this.prestados = prestados;
}
}
public boolean prestamo() {
if (estaDisponible()) {
this.prestados++;
return true;
} else {
return false;
}
}
public boolean devolucion() {
if (this.prestados > 0) {
this.prestados--;
return true;
} else {
return false;
}
}

public boolean estaDisponible() {
return this.ejemplares > this.prestados;
}
public int ejemplaresDisponibles() {
return this.ejemplares - this.prestados;
}

@Override
public String toString() {
return "Libro{" +
"referencia='" + this.referencia + '\'' +
", titulo='" + this.titulo + '\'' +
", autor='" + this.autor + '\'' +
", ejemplares=" + this.ejemplares +
", prestados=" + this.prestados +
'}';

}
@Override
public int compareTo(Libro o) {
return this.titulo.compareTo(o.titulo);
}
}